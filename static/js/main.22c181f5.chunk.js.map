{"version":3,"sources":["components/Cardlist.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Cardlist","robots","Error","SearchBox","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","OnSearchChange","event","searchField","target","value","fetch","then","res","json","users","filteredRobots","filter","robot","name","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAkBeA,EAdE,SAAC,GAAa,EAAZC,OAEX,MAAM,IAAIC,MAAM,YCSTC,MAff,YAAoC,IAAhBC,EAAe,EAAfA,aAChB,OACI,8BACI,uBACAC,UAAU,mCACVC,KAAM,SACNC,YAAa,gBACbC,SAAYJ,OCGTK,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,oBAAqBC,OAAQ,SAAvE,SACKJ,EAAMK,YCsBJC,E,kDAvBX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,UAAU,GAHJ,E,qDAOd,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,IAAOA,EAAYG,KAAKJ,MAAjBC,SACAH,EAAYM,KAAKX,MAAjBK,SACP,OAAIG,EAEI,oEAGDH,M,GApBYQ,aCkIZC,G,wDA3HX,aAAe,IAAD,8BACV,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAbzC,EAAKZ,MAAQ,CACThB,OAAQ,GACR0B,YAAc,IAJR,E,qDAQd,WAAqB,IAAD,OAChBG,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAACrB,OAAQiC,S,oBAO1C,WACI,MAA8Bb,KAAKJ,MAA5BhB,EAAP,EAAOA,OAAQ0B,EAAf,EAAeA,YACTQ,EAAiBlC,EAAOmC,QAAO,SAAAC,GACjC,OAAOA,EAAMC,KAAKC,cAAcC,SAASb,EAAYY,kBAEzD,OAAqB,IAAlBtC,EAAOwC,OACC,oBAAIpC,UAAU,OAAd,qBAGH,sBAAKA,UAAU,KAAf,UACA,oBAAIA,UAAU,UAAd,oBACA,cAAC,EAAD,CAAWD,aAAciB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUxB,OAAUkC,e,GAjC1BZ,cCGHmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.22c181f5.chunk.js","sourcesContent":["import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst Cardlist = ({robots}) => {\r\n    if(true) {\r\n        throw new Error('Errorrr')\r\n    }\r\n    return (\r\n        robots.map((user, i) => {\r\n            return (\r\n                <Card key={i} name={robots[i].name} email={robots[i].name} id={robots[i].id}/>\r\n            )\r\n        })\r\n    )\r\n}\r\n\r\n\r\nexport default Cardlist;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const Cardlist = ({robots}) => {\r\n//     return (\r\n//         robots.map((user, i) => {\r\n//             return (\r\n//                 <Card key= {i} name={robots[i].name} id={robots[i].id} email={robots[i].email}/>\r\n//             )\r\n//         })\r\n//     )\r\n// }\r\n\r\n\r\n","function SearchBox({searchChange}) {\r\n    return (\r\n        <div>\r\n            <input \r\n            className='pa2 ba b--grean bg-lightest-blue'\r\n            type= 'search' \r\n            placeholder= 'Search robots'\r\n            onChange = {searchChange} \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default SearchBox;\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflowY: 'scroll', border: '2.2px solid black', height: '500px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;\r\n","import React, {Component} from 'react';\r\n\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render() {\r\n        const {hasError} = this.state;\r\n        const {children} = this.props;\r\n        if (hasError) {\r\n            return (\r\n                <h1>Ooops! there seems to be an error.</h1>\r\n            )\r\n        }\r\n        return children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry\r\n","import React, { Component } from 'react';\r\nimport Cardlist from '../components/Cardlist';\r\nimport SearchBox from '../components/SearchBox';\r\n// import {robots} from './robots'\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry'; \r\n//import Clock from '../components/Clock';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchField : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(res => res.json())\r\n        .then(users => this.setState({robots: users}))\r\n    }\r\n\r\n    OnSearchChange = (event) => {\r\n        this.setState({searchField: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        const {robots, searchField} = this.state\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase())\r\n        })\r\n        if(robots.length === 0) {\r\n            return <h1 className='load'>Loading</h1>\r\n        } else {\r\n            return (\r\n                <div className='tc'>\r\n                <h1 className=\"f1 robo\">ROBOTS</h1>\r\n                <SearchBox searchChange={this.OnSearchChange}/>\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                        <Cardlist robots = {filteredRobots}/>\r\n                    </ErrorBoundry>\r\n                </Scroll>\r\n            </div>\r\n            )\r\n            \r\n        }\r\n    }\r\n} \r\n\r\n            \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// class App extends Component {\r\n//     constructor() {\r\n//         super()\r\n//         this.state = {\r\n//             robots: [],\r\n//             searchField: ''\r\n//         }\r\n//     }\r\n\r\n    \r\n//     onSearchChange = (event) => {\r\n//         this.setState({searchField: event.target.value})\r\n//     }\r\n    \r\n//     componentDidMount() {\r\n//         fetch('https://jsonplaceholder.typicode.com/users')\r\n//         .then(res => res.json())\r\n//         .then(users => this.setState({robots: users}))\r\n//     }\r\n\r\n    \r\n//     render() {\r\n//         const {robots, searchField} = this.state;\r\n//         const filteredRobots = robots.filter(robot => {\r\n//             return (\r\n//                 robot.name.toLowerCase().includes(searchField.toLowerCase())\r\n//             )\r\n//         })\r\n\r\n//         if (robots.length === 0) {\r\n//             return (\r\n//                 <h1>Loading</h1>\r\n//             )  \r\n//         } else {\r\n//             return (\r\n//                 <div className='tc'>\r\n//                     <Clock/>\r\n//                     <h1 className='f1'>RoboFriends</h1>\r\n//                     <SearchBox searchChange = {this.onSearchChange} />\r\n//                     <Scroll>\r\n//                         <Cardlist robots = {filteredRobots} />\r\n//                     </Scroll>\r\n                    \r\n//                 </div>\r\n//             )\r\n//         }        \r\n//     }\r\n// }\r\nexport default App\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';import 'tachyons'\n\n\nReactDOM.render (\n  <React.StrictMode>\n  <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}